  From db_actions
    # def add_books(self) -> List:
    #     data = pd.read_csv(self.filepath_one, delimiter='\t', encoding='utf-8')
    #     data.to_sql('books', con=self.engine,
    #                 if_exists='replace', index=False)
    #     results = self.session.query(Book).all()

    #     return results

    # def add_borrowers(self) -> List:
    #     data = pd.read_csv(self.filepath_two)
    #     data.to_sql('borrowers', con=self.engine,
    #                 if_exists='replace', index=False)
    #     results = self.session.query(Borrower).all()

    #     return results


    # def add_schema(self, table_name: str, filepath: str, schema) -> None:
    #     data = pd.read_csv(filepath)
    #     data.to_sql(table_name, con=self.engine,
    #                 if_exists='replace', index=False)
    #     results = self.session.query(schema).all()

    #     self.query_table(schema, results)

        def parse_csv(self):
        df_one = pd.read_csv(self.filepath_one)
        df_two = pd.read_csv(self.filepath_two)
        return df_one, df_two

from test_handler:
# def test_add_borrowers(add_schema_instance):
#     results = add_schema_instance.add_borrowers()
#     assert len(results) == 1000
#     print(results[0])


# def test_add_books(add_schema_instance):
#     results = add_schema_instance.add_books()
#     assert len(results) == 24968
#     print(results[0])